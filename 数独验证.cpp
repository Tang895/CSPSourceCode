/*

背景
XX学校风靡一款智力游戏，也就是数独（九宫格），先给你一个数独，并需要你验证是否符合规则。

描述
具体规则如下:
每一行都用到1,2,3,4,5,6,7,8,9，位置不限，
每一列都用到1,2,3,4,5,6,7,8,9，位置不限，
每3×3的格子（共九个这样的格子）都用到1,2,3,4,5,6,7,8,9，位置不限，
游戏的过程就是用1,2,3,4,5,6,7,8,9填充空白，并要求满足每行、每列、每个九宫格都用到1,2,3,4,5,6,7,8,9。

如下是一个正确的数独:
5 8 1 4 9 3 7 6 2
9 6 3 7 1 2 5 8 4
2 7 4 8 6 5 9 3 1
1 2 9 5 4 6 3 7 8
4 3 6 1 8 7 2 9 5
7 5 8 3 2 9 1 4 6
8 9 2 6 7 1 4 5 3
6 1 5 9 3 4 8 2 7
3 4 7 2 5 8 6 1 9

格式
输入格式
输入n个数独，你来验证它是否违反规则.
第一行为数独个数，第二行开始为第一个数独，之后为第二个，至第n个.
注意！每个数独之间有一个回车隔开!

输出格式
若正确则输出”Right”若不正确则输出”Wrong” 输出一个换一行

样例1
样例输入1
2
5 8 1 4 9 3 7 6 2
9 6 3 7 1 2 5 8 4
2 7 4 8 6 5 9 3 1
1 2 9 5 4 6 3 7 8
4 3 6 1 8 7 2 9 5
7 5 8 3 2 9 1 4 6
8 9 2 6 7 1 4 5 3
6 1 5 9 3 4 8 2 7
3 4 7 2 5 8 6 1 9

1 2 3 4 5 6 7 8 9
2 3 4 5 6 7 8 9 1
3 4 5 6 7 8 9 1 2
4 5 6 7 8 9 1 2 3
5 6 7 8 9 1 2 3 4
6 7 8 9 1 2 3 4 5
7 8 9 1 2 3 4 5 6
8 9 1 2 3 4 5 6 7
9 1 2 3 4 5 6 7 8
Copy
样例输出1
Right
Wrong
Copy
限制
各个测试点1s

提示
1<=n<=20 （输入的数独个数）
不论输入的数独是错误的还是正确的,数据都保证每个数在1-9之间,即只会出现因为有相同的数而导致违反规则,而不会因为数字超出了1-9的范围而违反规则.


*/

#include<iostream>
#include<cstdio>
#include<cstring>
//判断个列表相加是否为55; 
using namespace std;
int judge(void);
int main()
{
	int n;
	cin>>n;
	
	int result[n];
	
	for(int i=0;i<n;i++){
		result[i]=judge();
	}
	
	for(int i=0;i<n;i++){
		if(result[i]==0){
			cout<<"Wrong"<<endl;
		}
		if(result[i]==1){
			cout<<"Right"<<endl;
		}
	}
	return 0;
}


int judge(void)
{
	int a[9][9];
	for(int j=0;j<=8;j++){
		for(int i=0;i<=8;i++){
			cin>>a[j][i];
		}
	}
	
	int j,i;
	int sum1=0;//存相加的值然后与55比较 
	//memset(sum,0,sizeof(sum));
	for(j=0;j<=8;j++){
		for(i=0;i<9;i++){
			sum1+=a[j][i];
			
		}
		if(sum1!=45){
			return 0;
		}
		else {
			sum1=0;
		}
	}
	
	for(j=0;j<=8;j++){
		for(i=0;i<9;i++){
			sum1+=a[i][j];
		}
		if(sum1!=45){
			return 0;
		}
		else{
			sum1=0;
		}
		
	}
	int sum[9];
	memset(sum,0,sizeof(sum));
	
	
	for(int j=0;j<3;j++){
		for(int i=0;i<3;i++){
			sum[0]+=a[j][i];
			sum[1]+=a[j][i+3];
			sum[2]+=a[j][i+6];
			sum[3]+=a[j+3][i];
			sum[4]+=a[j+3][i+3];
			sum[5]+=a[j+3][i+6];
			sum[6]+=a[j+6][i];
			sum[7]+=a[j+6][i+3];
			sum[8]+=a[j+6][i+6];
		}
		
		//cout<<sum[0]<<endl;
		
		}
		
		for(int i=0;i<9;i++){
			if(sum[i]!=45){
				return 0;
			}
		}
		for(int i=0;i<8;i++){
			if(a[i][0]==a[i+1][0]){
				return 0;
			}
		}
	
	
	
	
	
	return 1;
	
	
	
	
	
	
}













